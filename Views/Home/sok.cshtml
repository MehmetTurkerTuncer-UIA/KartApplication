@model List<SakModel>

@{
    ViewData["Title"] = "Søk";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<style>
    /* Genel stil ayarları (Dark Mode) */
    body {
        display: flex;
        justify-content: center; /* Yatayda ortalama */
        align-items: center; /* Dikeyde ortalama */
        min-height: 100vh; /* Sayfa yüksekliği kadar boşluk bırakma */
        margin: 0; /* Varsayılan margin'leri sıfırlama */
        color: #E0E0E0; /* Genel yazı rengi */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Modern yazı tipi */
    }

    /* Container ayarları */
    .container {
        min-width: 1400px; /* Maksimum genişlik */
        margin: 20px; /* İçerik alanı */
        border: 1px solid #2A2A2A; /* Koyu çerçeve rengi */
        border-radius: 12px; /* Hafif köşe yuvarlama */
        padding: 20px; /* İçerik alanı */
        display: flex; /* Flex düzen */
        flex-direction: column; /* Dikey düzen */
        background-color: #1E1E1E; /* Koyu arka plan */
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5); /* Hafif gölge */
        align-items: center; /* İçeriği ortala */
    }

    /* Başlık ve form alanı */
    h2 {
        color: #BB86FC; /* Öne çıkan başlık rengi */
        margin-bottom: 20px; /* Boşluk */
    }

    form {
        margin-bottom: 20px; /* Form ve tablo arasına boşluk */
        display: flex; /* Yatay düzen */
        align-items: center; /* Dikey hizalama */
    }

    label {
        margin-right: 10px; /* Etiket ve input arasına boşluk */
    }

    input[type="text"] {
        padding: 10px;
        border: 1px solid #333; /* Koyu border */
        border-radius: 6px; /* Hafif köşe yuvarlama */
        background-color: #252525; /* Koyu arka plan */
        color: #E0E0E0; /* Beyaz yazı */
    }

    button {
        padding: 10px 20px;
        margin-left: 10px; /* Buton ve input arasında boşluk */
        border: none; /* Border kaldır */
        border-radius: 6px; /* Köşe yuvarlama */
        background-color: #03DAC6; /* Vurgulu buton rengi */
        color: #121212; /* Yazı rengi */
        cursor: pointer; /* İşaretçi */
        transition: background-color 0.3s; /* Hover geçişi */
    }

    button:hover {
        background-color: #018786; /* Hover efekti */
    }

    /* Tablo genel düzen */
    .tableForDetaljer {
        width: 100%;
        border-collapse: collapse; /* Hücre aralarındaki boşlukları kaldır */
        font-size: 16px;
        margin-top: 20px; /* Tablo üst boşluk */
        background-color: #1C1C1C; /* Koyu arka plan */
        border-radius: 8px; /* Hafif köşe yuvarlama */
        overflow: hidden; /* Taşan kenarları gizle */
    }

    /* Tablo başlık hücreleri */
    .tableForDetaljer th {
        background-color: #333333; /* Başlık arka plan */
        padding: 12px;
        text-align: center;
        color: #BB86FC; /* Öne çıkan başlık rengi */
        border-bottom: 2px solid #444; /* Alt çizgi */
    }

    /* Tablo veri hücreleri */
    .tableForDetaljer td {
        padding: 12px;
        color: #E0E0E0; /* Yazı rengi */
        background-color: #252525; /* Hücre arka plan */
        text-align: center;
        border-bottom: 1px solid #333; /* Alt çizgi */
        transition: background-color 0.2s; /* Hover geçişi */
    }

    .tableForDetaljer tr:hover td {
        background-color: #2A2A2A; /* Satır hover efekti */
    }

    /* Tablo içi tıklanabilir satırlar */
    .tableForDetaljer tr {
        cursor: pointer; /* Tıklanabilir gösterge */
    }

    /* Sonuç mesajı */
    .result-message {
        margin-top: 20px; /* Üst boşluk */
        text-align: center; /* Hizalama */
        color: #03DAC6; /* Vurgulu renk */
    }

   
    }
</style>

<div class="container">
    <h2>Referans Numarası ile Søk</h2>
    <form method="get" action="@Url.Action("Sok", "Home")">
        <label for="referenceNumber">Referans Numarası:</label>
        <input type="text" id="referenceNumber" name="referenceNumber" required />
        <button type="submit">Søk</button>
    </form>

    @if (Model != null && Model.Any())
    {
        <div class="result-message">Referans Numarası: <strong>@Model.First().Id</strong></div>
    }
    else
    {
        <div class="result-message">Sisteminizde bu referans numarası bulunamadı.</div>
    }

    <table class="tableForDetaljer" id="saksbehandlermenu">
        <thead>
            <tr>
                <th>Dato</th>
                <th>Sak Status</th>
                <th>Referansenummer</th>
                <th>Kontroll Status</th>
            </tr>
        </thead>
        <tbody id="saksbehandlersaks">
            @if (Model != null && Model.Any())
            {
                foreach (var sakModel in Model)
                {
                    <tr onclick="window.location.href='@Url.Action("Detaljer", "Saksbehandler", new { id = sakModel.Id })'">
                        <td>@sakModel.CreatedAt.ToShortDateString()</td>
                        <td>@sakModel.Status.ToString()</td>
                        <td>@sakModel.Id</td>
                        <td>@sakModel.IsTemporary</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">Ingen saker funnet med det oppgitte referansenummeret.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
