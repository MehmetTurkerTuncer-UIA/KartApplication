@model KartApplication.Models.AreaChange
@{
    ViewData["Title"] = "Oversikt";
    Layout = "~/Views/Shared/_GjestLayout.cshtml";
}
<br>
<center><h2>Oppsummering</h2></center>



@if (!string.IsNullOrEmpty(Model.Description))
{
    
   <div class="OppsummeringBox">    

    <div class="OppsummeringContentTitle">    <img src="~/images/check-mark.png" alt="Checkbox" class="checkboxImage"> <!-- Resim yolu güncellendi -->
 Beskrivelse: </div>
        <p class="OppsummeringContent"> @Model.Description</p>
    </div>







}
@if (!string.IsNullOrEmpty(Model.Address))
{
    <div class="OppsummeringBox">
        <div class="OppsummeringContentTitle"> <img src="~/images/check-mark.png" alt="Checkbox" class="checkboxImage"> <!-- Resim yolu güncellendi --> Adresse: </div>

        <p class="OppsummeringContent"> @Model.Address</p>
    </div>


}

<!-- Harita konteyneri -->
<div class="OppsummeringBox">
    <div class="OppsummeringContentTitle"> <img src="~/images/check-mark.png" alt="Checkbox" class="checkboxImage"> <!-- Resim yolu güncellendi --> Kart: </div>
    <div id="map" style="height: 400px; width: 100%;"></div>
</div>
<!-- Koordinatlar tablosu -->
<table class="table table-bordered">
    <thead>
        <tr>
            <th>#</th>
            <th>Breddegrad</th>
            <th>Lengdegrad</th>
        </tr>
    </thead>
    <tbody id="coordinatesTableBody">
        <!-- Koordinatlar burada doldurulacak -->
    </tbody>
</table>


<!-- Send inn butonu -->
<form asp-action="Kvittering" method="post">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 20px;">
        <button type="button" class="btn" style="background-color: gray; color: white; padding: 10px 20px; border-radius: 5px; cursor: pointer;" onclick="window.location.href='@Url.Action("Beskrivelse", "Gjest")'">Tilbake</button>
        <button type="submit" class="btn btn-primary" style="background-color: #4CAF50; color: white; padding: 10px 20px; border-radius: 5px; border: none; cursor: pointer;">Send inn</button>
    </div>
</form>



@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <script>
        // GeoJSON verisini modelden alıyoruz
        var geoJsonData = @Html.Raw(Model.GeoJson);
        var selectedMapType = '@Model.SelectedMapType'; // Seçilen harita tipi

        // Harita katmanlarını tanımla
        var fargekart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            maxZoom: 18,
            attribution: '&copy; <a href="https://kartverket.no/">Kartverket</a>'
        });

       var gratonekart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
        maxZoom: 18,
        attribution: '&copy; <a href="https://kartverket.no/">Kartverket</a>'
    });

    var turkart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/toporaster/default/webmercator/{z}/{y}/{x}.png', {
        maxZoom: 18,
        attribution: '&copy; <a href="https://kartverket.no/">Kartverket</a>'
    });

    var sjokart = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/sjokartraster/default/webmercator/{z}/{y}/{x}.png', {
        maxZoom: 18,
        attribution: '&copy; <a href="https://kartverket.no/">Kartverket</a>'
    });

